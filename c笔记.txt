#include<stdio.h>           //std  standard 标准的  io 输入输出   导入标准的输入输出库文件
标准main函数的写法   int main(void)
int           4个字节
short int      2个字节
long int      8个字节
flaot         4个字节
double        8个字节
char          1个字节
sigend int 和 unsigend int 只能用于非数值的场合
十进制        %d
八进制        %0
十六进制      %x
unsigend int  %u 
long          %ld                long 类型在 d、0、x前面加1，表示打印相应的进制数
shrort        %hd                同上
char          %c
sizeof();     计算所占字节数       %zd
strlen();     计算字符串的长度     %zd
空字符  \0    c语言用它标记字符串的结束，空字符不是数字0，
				它是非打印字符，其ASC码值是0.c中的字符串一定以空字符结束
定义常量  #define PI 3.1415  另外还有一个不常用的命名约定，即在名称前带c_或k_前缀来表示常量(如，c_levlel或k_line);
const 限定符
       用于限定一个变量为只读，   如同java中的final
	   
	   
scanf
     如果用scanf() 读取基本变量类型的值，在变量名前加&；
	 如果用scanf()把字符串读入字符数组中，不要使用&；
	 %c           	把输入解释成字符
	 d%             把输入解释成有符号十进制整数
	 %e %f %g %a    把输入解释成浮点数
	 %E %F %G %A    把输入解释成浮点数
	 %i             把输入解释成有符号十进制整数
	 %0				把输入解释成有符号八进制整数
	 %p             把输入解释成指针(地址)
	 %s             把输入解释成字符串。从第一个非空白字符开始，到下一个空白字符之前的所有字符都是输入
	 %u				把输入解释成无符号十进制整数
	 %x %X          把输入解释成无符号十六进制整数
	 
1.scanf()函数有返回值且为int型。
2.scanf()函数返回的值为：正确按指定格式输入变量的个数；也即能正确接收到值的变量个数。




文件操作:
	函数说明：feof(FILE * stream)用来侦测是否读取到了文件尾, 尾数stream 为fopen()所返回之文件指针. 如果已到文件尾则返回非零值, 其他情况返回0
	
	FILE * fopen(const char * path,const char * mode)文件顺利打开后，指向该流的文件指针就会被返回。如果文件打开失败则返回NULL，并把错误代码存在errno 中。

　　fputc函数的作用就是将一个字符写入到文件中，其调用形式为：fputc(ch,pFile);
			其中ch就是要写入的字符，pFile是指向FILE结构的指针，通过fopen函数打开文件即可获取pFile。
			
		C语言中没有输入输出语句，所有的输入输出功能都用 ANSI C提供的一组标准库函数来实现。文件操作标准库函数有：

　　 　　 文件的打开操作 fopen 打开一个文件

　　 　　 文件的关闭操作 fclose 关闭一个文件

　　 　　 文件的读写操作 fgetc 从文件中读取一个字符
　　 　　 　　　　　　　 fputc 写一个字符到文件中去
　　 　　 　　　　　　　 fgets 从文件中读取一个字符串
　　 　　 　　　　　　　 fputs 写一个字符串到文件中去
　　 　　 　　　　　　　 fprintf 往文件中写格式化数据
　　 　　 　　　　　　　 fscanf 格式化读取文件中数据
　　 　　 　　　　　　　 fread 以二进制形式读取文件中的数据
　　 　　 　　　　　　　 fwrite 以二进制形式写数据到文件中去
　　 　　 　　　　　　　 getw 以二进制形式读取一个整数
　　 　　 　　　　　　　 putw 以二进制形式存贮一个整数

　　 　文件状态检查函数 feof 文件结束
　　 　　 　　　　　　　 ferror 文件读/写出错
　　 　　 　　　　　　　 clearerr 清除文件错误标志
　　 　　 　　　　　　　 ftell 了解文件指针的当前位置

　　　　　　文件定位函数 rewind 反绕
　　 　　 　　　　　　　 fseek 随机定位

 原型  char *  fgets(char * s, int n,FILE *stream);
    参数：
         s: 字符型指针，指向存储读入数据的缓冲区的地址。
         n: 从流中读入n-1个字符
         stream ： 指向读取的流。
   返回值：
          1. 当n<=0 时返回NULL，即空指针。
          2. 当n=1 时，返回空串"".
          3. 如果读入成功，则返回缓冲区的地址。
          4. 如果读入错误或遇到文件结尾(EOF)，则返回NULL.
		  
		  
	原型：extern char *strchr(char *s,char c);
		用法：#include <string.h>
		功能：查找字符串s中首次出现字符c的位置
		说明：返回首次出现c的位置的指针，如果s中不存在c则返回NULL。
		
		
		
		
		
		
字符操作
	1.getchar()
	记住：getchar()函数读取每一个字符！每一个！包括空格，制表符和换行符。
	
	2.scanf()
	记住：scanf()读取数字时会跳过空格，制表符和换行符。并且是把换行符留在输入队列中！是留在！！！
	
	3.gets()
	记住：gets()是输入一整行的。它是丢弃换行符！记住，是丢弃！！！而puts()是自带换行符的。所以二者搭配使用。
	使用gets()的危险在于，可能会导致缓冲区溢出(buffer overflow)。如果这些多余的字符擦去了重要程序数据，会导致程序异常中止！
	
	4.fgets()
	char * fgets(char * string, int size, FILE * stream);
	记住：fgets()会把换行符放在字符串末尾！也就是读取换行符！！！而fputs()不会自带换行符，所以二者搭配使用。
	另外，fgets()有三个参数，第一个是数组地址，第二个是读入字符最大数量，第三个是指明要读入的文件。
	
	4.gets_s()
	记住：gets_s()函数读到换行符，是舍弃！舍弃啊！！！
	另外，gets_s()只有两个参数，因为只从标准输入中读取数据，所以跟fgets()相比不需要第三个参数。
	
	2、fputs()函数：
	原型int fputs(char *string, FILE *stream);
	送一个字符串到一个流中，fputs()不会自带换行符。



文件操作
1.fopen()
	w 打开只写文件，若文件存在则文件长度清为0，即该文件内容会消失。若文件不存在则建立该文件。
	w+ 打开可读写文件，若文件存在则文件长度清为零，即该文件内容会消失。若文件不存在则建立该文件。
	wb 只写方式打开或新建一个二进制文件，只允许写数据。
	wb+ 读写方式打开或建立一个二进制文件，允许读和写。
	r 打开只读文件，该文件必须存在，否则报错。
	r+ 打开可读写的文件，该文件必须存在，否则报错。
	rb+ 读写方式打开一个二进制文件，只允许读写数据。
	a 以附加的方式打开只写文件。若文件不存在，则会建立该文件，如果文件存在，写入的数据会被加到文件尾，即文件原先的内容会被保留。（EOF符保留）
	a+ 以附加方式打开可读写的文件。若文件不存在，则会建立该文件，如果文件存在，写入的数据会被加到文件尾后，即文件原先的内容会被保留。 （原来的EOF符不保留）
	ab+ 读写打开一个二进制文件，允许读或在文件末追加数据。
	加入b 字符用来告诉函数库打开的文件为二进制文件，而非纯文字文件。
2.rewind()
	int rewind(FILE *stream);
	功  能: 将文件指针重新指向一个流的开头
	
3.fseek函数
	功能：把与fp有关的文件位置指针放到一个指定位置。
	格式：  int fseek(FILE *stream, long offset, int fromwhere);
	范例一：fseek(fp, 0L, SEEK_END);
		解释：文件指针定位到文件末尾，偏移0个字节
	范例二：  fseek(fp,50L,0)；或fseek(fp,50L,SEEK_SET);
	解释：其作用是将位置指针移到离文件头50个字节处。
	
4.ftell()
	函数 ftell() 用于得到文件位置指针当前位置相对于文件首的偏移字节数。
	在随机方式存取文件时，由于文件位置频繁的前后移动，程序不容易确定文件的当前位置。使用fseek函数后再调用函数ftell()就能非常容易地确定文件的当前位置。






























	  